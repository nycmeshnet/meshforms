/* tslint:disable */
/* eslint-disable */
/**
 * MeshDB Data API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { LinkFromDevice } from './LinkFromDevice';
import {
    LinkFromDeviceFromJSON,
    LinkFromDeviceFromJSONTyped,
    LinkFromDeviceToJSON,
} from './LinkFromDevice';
import type { LinkStatusEnum } from './LinkStatusEnum';
import {
    LinkStatusEnumFromJSON,
    LinkStatusEnumFromJSONTyped,
    LinkStatusEnumToJSON,
} from './LinkStatusEnum';
import type { LinkType } from './LinkType';
import {
    LinkTypeFromJSON,
    LinkTypeFromJSONTyped,
    LinkTypeToJSON,
} from './LinkType';

/**
 * A  ModelSerializer MixIn which sets `NestedKeyObjectRelatedField` as the default field class
 * to use for the foreign key fields
 * @export
 * @interface PatchedLink
 */
export interface PatchedLink {
    /**
     * 
     * @type {string}
     * @memberof PatchedLink
     */
    readonly id?: string;
    /**
     * The current status of this link
     * 
     * * `Inactive` - Inactive
     * * `Planned` - Planned
     * * `Active` - Active
     * @type {LinkStatusEnum}
     * @memberof PatchedLink
     */
    status?: LinkStatusEnum;
    /**
     * 
     * @type {LinkType}
     * @memberof PatchedLink
     */
    type?: LinkType | null;
    /**
     * The date this link was created
     * @type {Date}
     * @memberof PatchedLink
     */
    installDate?: Date | null;
    /**
     * The date this link was powered off, disassembled, or abandoned
     * @type {Date}
     * @memberof PatchedLink
     */
    abandonDate?: Date | null;
    /**
     * A short description of "where to where" this link connects in human readable language
     * @type {string}
     * @memberof PatchedLink
     */
    description?: string | null;
    /**
     * A free-form text description of this Link, to track any additional information.
     * @type {string}
     * @memberof PatchedLink
     */
    notes?: string | null;
    /**
     * The UUID used to indentify this link in UISP (if applicable)
     * @type {string}
     * @memberof PatchedLink
     */
    uispId?: string | null;
    /**
     * 
     * @type {LinkFromDevice}
     * @memberof PatchedLink
     */
    fromDevice?: LinkFromDevice;
    /**
     * 
     * @type {LinkFromDevice}
     * @memberof PatchedLink
     */
    toDevice?: LinkFromDevice;
}



/**
 * Check if a given object implements the PatchedLink interface.
 */
export function instanceOfPatchedLink(value: object): value is PatchedLink {
    return true;
}

export function PatchedLinkFromJSON(json: any): PatchedLink {
    return PatchedLinkFromJSONTyped(json, false);
}

export function PatchedLinkFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchedLink {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'status': json['status'] == null ? undefined : LinkStatusEnumFromJSON(json['status']),
        'type': json['type'] == null ? undefined : LinkTypeFromJSON(json['type']),
        'installDate': json['install_date'] == null ? undefined : (new Date(json['install_date'])),
        'abandonDate': json['abandon_date'] == null ? undefined : (new Date(json['abandon_date'])),
        'description': json['description'] == null ? undefined : json['description'],
        'notes': json['notes'] == null ? undefined : json['notes'],
        'uispId': json['uisp_id'] == null ? undefined : json['uisp_id'],
        'fromDevice': json['from_device'] == null ? undefined : LinkFromDeviceFromJSON(json['from_device']),
        'toDevice': json['to_device'] == null ? undefined : LinkFromDeviceFromJSON(json['to_device']),
    };
}

export function PatchedLinkToJSON(value?: Omit<PatchedLink, 'id'> | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'status': LinkStatusEnumToJSON(value['status']),
        'type': LinkTypeToJSON(value['type']),
        'install_date': value['installDate'] == null ? undefined : ((value['installDate'] as any).toISOString().substring(0,10)),
        'abandon_date': value['abandonDate'] == null ? undefined : ((value['abandonDate'] as any).toISOString().substring(0,10)),
        'description': value['description'],
        'notes': value['notes'],
        'uisp_id': value['uispId'],
        'from_device': LinkFromDeviceToJSON(value['fromDevice']),
        'to_device': LinkFromDeviceToJSON(value['toDevice']),
    };
}

