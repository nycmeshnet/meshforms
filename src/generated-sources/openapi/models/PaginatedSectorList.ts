/* tslint:disable */
/* eslint-disable */
/**
 * MeshDB Data API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Sector } from './Sector';
import {
    SectorFromJSON,
    SectorFromJSONTyped,
    SectorToJSON,
} from './Sector';

/**
 * 
 * @export
 * @interface PaginatedSectorList
 */
export interface PaginatedSectorList {
    /**
     * 
     * @type {number}
     * @memberof PaginatedSectorList
     */
    count: number;
    /**
     * 
     * @type {string}
     * @memberof PaginatedSectorList
     */
    next?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PaginatedSectorList
     */
    previous?: string | null;
    /**
     * 
     * @type {Array<Sector>}
     * @memberof PaginatedSectorList
     */
    results: Array<Sector>;
}

/**
 * Check if a given object implements the PaginatedSectorList interface.
 */
export function instanceOfPaginatedSectorList(value: object): value is PaginatedSectorList {
    if (!('count' in value) || value['count'] === undefined) return false;
    if (!('results' in value) || value['results'] === undefined) return false;
    return true;
}

export function PaginatedSectorListFromJSON(json: any): PaginatedSectorList {
    return PaginatedSectorListFromJSONTyped(json, false);
}

export function PaginatedSectorListFromJSONTyped(json: any, ignoreDiscriminator: boolean): PaginatedSectorList {
    if (json == null) {
        return json;
    }
    return {
        
        'count': json['count'],
        'next': json['next'] == null ? undefined : json['next'],
        'previous': json['previous'] == null ? undefined : json['previous'],
        'results': ((json['results'] as Array<any>).map(SectorFromJSON)),
    };
}

export function PaginatedSectorListToJSON(value?: PaginatedSectorList | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'count': value['count'],
        'next': value['next'],
        'previous': value['previous'],
        'results': ((value['results'] as Array<any>).map(SectorToJSON)),
    };
}

