/* tslint:disable */
/* eslint-disable */
/**
 * MeshDB Data API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { LOSFromBuilding } from './LOSFromBuilding';
import {
    LOSFromBuildingFromJSON,
    LOSFromBuildingFromJSONTyped,
    LOSFromBuildingToJSON,
} from './LOSFromBuilding';
import type { SourceEnum } from './SourceEnum';
import {
    SourceEnumFromJSON,
    SourceEnumFromJSONTyped,
    SourceEnumToJSON,
} from './SourceEnum';

/**
 * A  ModelSerializer MixIn which sets `NestedKeyObjectRelatedField` as the default field class
 * to use for the foreign key fields
 * @export
 * @interface LOS
 */
export interface LOS {
    /**
     * 
     * @type {string}
     * @memberof LOS
     */
    readonly id: string;
    /**
     * The date we conducted the analysis that concluded this LOS exists. Important since new buildings might have been built which block the LOS after this date
     * @type {Date}
     * @memberof LOS
     */
    analysisDate?: Date | null;
    /**
     * The source of information that tells us this LOS exists
     * 
     * * `Human Annotated` - Human Annotated
     * * `Existing Link` - Existing Link
     * @type {SourceEnum}
     * @memberof LOS
     */
    source: SourceEnum;
    /**
     * A free-form text description of this LOS, to track any additional information.
     * @type {string}
     * @memberof LOS
     */
    notes?: string | null;
    /**
     * 
     * @type {LOSFromBuilding}
     * @memberof LOS
     */
    fromBuilding: LOSFromBuilding;
    /**
     * 
     * @type {LOSFromBuilding}
     * @memberof LOS
     */
    toBuilding: LOSFromBuilding;
}



/**
 * Check if a given object implements the LOS interface.
 */
export function instanceOfLOS(value: object): value is LOS {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('source' in value) || value['source'] === undefined) return false;
    if (!('fromBuilding' in value) || value['fromBuilding'] === undefined) return false;
    if (!('toBuilding' in value) || value['toBuilding'] === undefined) return false;
    return true;
}

export function LOSFromJSON(json: any): LOS {
    return LOSFromJSONTyped(json, false);
}

export function LOSFromJSONTyped(json: any, ignoreDiscriminator: boolean): LOS {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'analysisDate': json['analysis_date'] == null ? undefined : (new Date(json['analysis_date'])),
        'source': SourceEnumFromJSON(json['source']),
        'notes': json['notes'] == null ? undefined : json['notes'],
        'fromBuilding': LOSFromBuildingFromJSON(json['from_building']),
        'toBuilding': LOSFromBuildingFromJSON(json['to_building']),
    };
}

export function LOSToJSON(value?: Omit<LOS, 'id'> | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'analysis_date': value['analysisDate'] == null ? undefined : ((value['analysisDate'] as any).toISOString().substring(0,10)),
        'source': SourceEnumToJSON(value['source']),
        'notes': value['notes'],
        'from_building': LOSFromBuildingToJSON(value['fromBuilding']),
        'to_building': LOSFromBuildingToJSON(value['toBuilding']),
    };
}

