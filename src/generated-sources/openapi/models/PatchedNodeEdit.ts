/* tslint:disable */
/* eslint-disable */
/**
 * MeshDB Data API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { NodeBuildingsInner } from './NodeBuildingsInner';
import {
    NodeBuildingsInnerFromJSON,
    NodeBuildingsInnerFromJSONTyped,
    NodeBuildingsInnerToJSON,
} from './NodeBuildingsInner';
import type { BuildingInstallsInner } from './BuildingInstallsInner';
import {
    BuildingInstallsInnerFromJSON,
    BuildingInstallsInnerFromJSONTyped,
    BuildingInstallsInnerToJSON,
} from './BuildingInstallsInner';
import type { NodeDevicesInner } from './NodeDevicesInner';
import {
    NodeDevicesInnerFromJSON,
    NodeDevicesInnerFromJSONTyped,
    NodeDevicesInnerToJSON,
} from './NodeDevicesInner';
import type { Status2a6Enum } from './Status2a6Enum';
import {
    Status2a6EnumFromJSON,
    Status2a6EnumFromJSONTyped,
    Status2a6EnumToJSON,
} from './Status2a6Enum';
import type { TypeB10Enum } from './TypeB10Enum';
import {
    TypeB10EnumFromJSON,
    TypeB10EnumFromJSONTyped,
    TypeB10EnumToJSON,
} from './TypeB10Enum';

/**
 * A  ModelSerializer MixIn which sets `NestedKeyObjectRelatedField` as the default field class
 * to use for the foreign key fields
 * @export
 * @interface PatchedNodeEdit
 */
export interface PatchedNodeEdit {
    /**
     * 
     * @type {string}
     * @memberof PatchedNodeEdit
     */
    id?: string;
    /**
     * 
     * @type {Array<NodeBuildingsInner>}
     * @memberof PatchedNodeEdit
     */
    readonly buildings?: Array<NodeBuildingsInner>;
    /**
     * 
     * @type {Array<NodeDevicesInner>}
     * @memberof PatchedNodeEdit
     */
    readonly devices?: Array<NodeDevicesInner>;
    /**
     * 
     * @type {Array<BuildingInstallsInner>}
     * @memberof PatchedNodeEdit
     */
    readonly installs?: Array<BuildingInstallsInner>;
    /**
     * 
     * @type {number}
     * @memberof PatchedNodeEdit
     */
    readonly networkNumber?: number | null;
    /**
     * The colloquial name of this node used among mesh volunteers, if applicable
     * @type {string}
     * @memberof PatchedNodeEdit
     */
    name?: string | null;
    /**
     * The current status of this Node
     * 
     * * `Inactive` - Inactive
     * * `Active` - Active
     * * `Planned` - Planned
     * @type {Status2a6Enum}
     * @memberof PatchedNodeEdit
     */
    status?: Status2a6Enum;
    /**
     * The type of node this is, controls the icon used on the network map
     * 
     * * `Standard` - Standard
     * * `Hub` - Hub
     * * `Supernode` - Supernode
     * * `POP` - Pop
     * * `AP` - Ap
     * * `Remote` - Remote
     * @type {TypeB10Enum}
     * @memberof PatchedNodeEdit
     */
    type?: TypeB10Enum;
    /**
     * Approximate Node latitude in decimal degrees (this will match one of the attached Building objects in most cases, but has been manually moved around in some cases to more accurately reflect node location)
     * @type {number}
     * @memberof PatchedNodeEdit
     */
    latitude?: number;
    /**
     * Approximate Node longitude in decimal degrees (this will match one of the attached Building objects in most cases, but has been manually moved around in some cases to more accurately reflect node location)
     * @type {number}
     * @memberof PatchedNodeEdit
     */
    longitude?: number;
    /**
     * Approximate Node altitude in "absolute" meters above mean sea level (this will match one of the attached Building objects in most cases, but has been manually moved around in some cases to more accurately reflect node location)
     * @type {number}
     * @memberof PatchedNodeEdit
     */
    altitude?: number | null;
    /**
     * The date the first Install or Device associated with this Node became active on the mesh
     * @type {Date}
     * @memberof PatchedNodeEdit
     */
    installDate?: Date | null;
    /**
     * The date the last Install or Device associated with this Node was abandoned, unplugged, or removed from service
     * @type {Date}
     * @memberof PatchedNodeEdit
     */
    abandonDate?: Date | null;
    /**
     * A free-form text description of this Node, to track any additional information. For Nodes imported from the spreadsheet, this starts with a formatted block of information about the import process and original spreadsheet data. However this structure can be changed by admins at any time and should not be relied on by automated systems. 
     * @type {string}
     * @memberof PatchedNodeEdit
     */
    notes?: string | null;
}



/**
 * Check if a given object implements the PatchedNodeEdit interface.
 */
export function instanceOfPatchedNodeEdit(value: object): value is PatchedNodeEdit {
    return true;
}

export function PatchedNodeEditFromJSON(json: any): PatchedNodeEdit {
    return PatchedNodeEditFromJSONTyped(json, false);
}

export function PatchedNodeEditFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchedNodeEdit {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'buildings': json['buildings'] == null ? undefined : ((json['buildings'] as Array<any>).map(NodeBuildingsInnerFromJSON)),
        'devices': json['devices'] == null ? undefined : ((json['devices'] as Array<any>).map(NodeDevicesInnerFromJSON)),
        'installs': json['installs'] == null ? undefined : ((json['installs'] as Array<any>).map(BuildingInstallsInnerFromJSON)),
        'networkNumber': json['network_number'] == null ? undefined : json['network_number'],
        'name': json['name'] == null ? undefined : json['name'],
        'status': json['status'] == null ? undefined : Status2a6EnumFromJSON(json['status']),
        'type': json['type'] == null ? undefined : TypeB10EnumFromJSON(json['type']),
        'latitude': json['latitude'] == null ? undefined : json['latitude'],
        'longitude': json['longitude'] == null ? undefined : json['longitude'],
        'altitude': json['altitude'] == null ? undefined : json['altitude'],
        'installDate': json['install_date'] == null ? undefined : (new Date(json['install_date'])),
        'abandonDate': json['abandon_date'] == null ? undefined : (new Date(json['abandon_date'])),
        'notes': json['notes'] == null ? undefined : json['notes'],
    };
}

export function PatchedNodeEditToJSON(value?: Omit<PatchedNodeEdit, 'buildings'|'devices'|'installs'|'network_number'> | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'name': value['name'],
        'status': Status2a6EnumToJSON(value['status']),
        'type': TypeB10EnumToJSON(value['type']),
        'latitude': value['latitude'],
        'longitude': value['longitude'],
        'altitude': value['altitude'],
        'install_date': value['installDate'] == null ? undefined : ((value['installDate'] as any).toISOString().substring(0,10)),
        'abandon_date': value['abandonDate'] == null ? undefined : ((value['abandonDate'] as any).toISOString().substring(0,10)),
        'notes': value['notes'],
    };
}

