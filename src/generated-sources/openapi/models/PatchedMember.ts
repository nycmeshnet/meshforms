/* tslint:disable */
/* eslint-disable */
/**
 * MeshDB Data API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { BuildingInstallsInner } from './BuildingInstallsInner';
import {
    BuildingInstallsInnerFromJSON,
    BuildingInstallsInnerFromJSONTyped,
    BuildingInstallsInnerToJSON,
} from './BuildingInstallsInner';

/**
 * A  ModelSerializer MixIn which sets `NestedKeyObjectRelatedField` as the default field class
 * to use for the foreign key fields
 * @export
 * @interface PatchedMember
 */
export interface PatchedMember {
    /**
     * 
     * @type {string}
     * @memberof PatchedMember
     */
    readonly id?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof PatchedMember
     */
    readonly allEmailAddresses?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof PatchedMember
     */
    readonly allPhoneNumbers?: Array<string>;
    /**
     * 
     * @type {Array<BuildingInstallsInner>}
     * @memberof PatchedMember
     */
    readonly installs?: Array<BuildingInstallsInner>;
    /**
     * Member full name in the format: "First Last"
     * @type {string}
     * @memberof PatchedMember
     */
    name?: string;
    /**
     * Primary email address used to contact the member
     * @type {string}
     * @memberof PatchedMember
     */
    primaryEmailAddress?: string | null;
    /**
     * Email address used by the member to donate via Stripe, if different to their primary email
     * @type {string}
     * @memberof PatchedMember
     */
    stripeEmailAddress?: string | null;
    /**
     * Any additional email addresses associated with this member
     * @type {Array<string>}
     * @memberof PatchedMember
     */
    additionalEmailAddresses?: Array<string> | null;
    /**
     * A primary contact phone number for this member
     * @type {string}
     * @memberof PatchedMember
     */
    phoneNumber?: string | null;
    /**
     * Any additional phone numbers used by this member
     * @type {Array<string>}
     * @memberof PatchedMember
     */
    additionalPhoneNumbers?: Array<string> | null;
    /**
     * The member's slack handle
     * @type {string}
     * @memberof PatchedMember
     */
    slackHandle?: string | null;
    /**
     * A free-form text description of how to contact this member, to track any additional information. For Members imported from the spreadsheet, this starts with a formatted block of information about the import process and original spreadsheet data. However this structure can be changed by admins at any time and should not be relied on by automated systems. 
     * @type {string}
     * @memberof PatchedMember
     */
    notes?: string | null;
}

/**
 * Check if a given object implements the PatchedMember interface.
 */
export function instanceOfPatchedMember(value: object): value is PatchedMember {
    return true;
}

export function PatchedMemberFromJSON(json: any): PatchedMember {
    return PatchedMemberFromJSONTyped(json, false);
}

export function PatchedMemberFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchedMember {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'allEmailAddresses': json['all_email_addresses'] == null ? undefined : json['all_email_addresses'],
        'allPhoneNumbers': json['all_phone_numbers'] == null ? undefined : json['all_phone_numbers'],
        'installs': json['installs'] == null ? undefined : ((json['installs'] as Array<any>).map(BuildingInstallsInnerFromJSON)),
        'name': json['name'] == null ? undefined : json['name'],
        'primaryEmailAddress': json['primary_email_address'] == null ? undefined : json['primary_email_address'],
        'stripeEmailAddress': json['stripe_email_address'] == null ? undefined : json['stripe_email_address'],
        'additionalEmailAddresses': json['additional_email_addresses'] == null ? undefined : json['additional_email_addresses'],
        'phoneNumber': json['phone_number'] == null ? undefined : json['phone_number'],
        'additionalPhoneNumbers': json['additional_phone_numbers'] == null ? undefined : json['additional_phone_numbers'],
        'slackHandle': json['slack_handle'] == null ? undefined : json['slack_handle'],
        'notes': json['notes'] == null ? undefined : json['notes'],
    };
}

export function PatchedMemberToJSON(value?: Omit<PatchedMember, 'id'|'all_email_addresses'|'all_phone_numbers'|'installs'> | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'name': value['name'],
        'primary_email_address': value['primaryEmailAddress'],
        'stripe_email_address': value['stripeEmailAddress'],
        'additional_email_addresses': value['additionalEmailAddresses'],
        'phone_number': value['phoneNumber'],
        'additional_phone_numbers': value['additionalPhoneNumbers'],
        'slack_handle': value['slackHandle'],
        'notes': value['notes'],
    };
}

