/* tslint:disable */
/* eslint-disable */
/**
 * MeshDB Data API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { BuildingInstallsInner } from './BuildingInstallsInner';
import {
    BuildingInstallsInnerFromJSON,
    BuildingInstallsInnerFromJSONTyped,
    BuildingInstallsInnerToJSON,
} from './BuildingInstallsInner';

/**
 * A  ModelSerializer MixIn which sets `NestedKeyObjectRelatedField` as the default field class
 * to use for the foreign key fields
 * @export
 * @interface Member
 */
export interface Member {
    /**
     * 
     * @type {string}
     * @memberof Member
     */
    readonly id: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof Member
     */
    readonly allEmailAddresses: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof Member
     */
    readonly allPhoneNumbers: Array<string>;
    /**
     * 
     * @type {Array<BuildingInstallsInner>}
     * @memberof Member
     */
    readonly installs: Array<BuildingInstallsInner>;
    /**
     * Member full name in the format: "First Last"
     * @type {string}
     * @memberof Member
     */
    name: string;
    /**
     * Primary email address used to contact the member
     * @type {string}
     * @memberof Member
     */
    primaryEmailAddress?: string | null;
    /**
     * Email address used by the member to donate via Stripe, if different to their primary email
     * @type {string}
     * @memberof Member
     */
    stripeEmailAddress?: string | null;
    /**
     * Any additional email addresses associated with this member
     * @type {Array<string>}
     * @memberof Member
     */
    additionalEmailAddresses?: Array<string> | null;
    /**
     * A primary contact phone number for this member
     * @type {string}
     * @memberof Member
     */
    phoneNumber?: string | null;
    /**
     * Any additional phone numbers used by this member
     * @type {Array<string>}
     * @memberof Member
     */
    additionalPhoneNumbers?: Array<string> | null;
    /**
     * The member's slack handle
     * @type {string}
     * @memberof Member
     */
    slackHandle?: string | null;
    /**
     * A free-form text description of how to contact this member, to track any additional information. For Members imported from the spreadsheet, this starts with a formatted block of information about the import process and original spreadsheet data. However this structure can be changed by admins at any time and should not be relied on by automated systems. 
     * @type {string}
     * @memberof Member
     */
    notes?: string | null;
}

/**
 * Check if a given object implements the Member interface.
 */
export function instanceOfMember(value: object): value is Member {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('allEmailAddresses' in value) || value['allEmailAddresses'] === undefined) return false;
    if (!('allPhoneNumbers' in value) || value['allPhoneNumbers'] === undefined) return false;
    if (!('installs' in value) || value['installs'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    return true;
}

export function MemberFromJSON(json: any): Member {
    return MemberFromJSONTyped(json, false);
}

export function MemberFromJSONTyped(json: any, ignoreDiscriminator: boolean): Member {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'allEmailAddresses': json['all_email_addresses'],
        'allPhoneNumbers': json['all_phone_numbers'],
        'installs': ((json['installs'] as Array<any>).map(BuildingInstallsInnerFromJSON)),
        'name': json['name'],
        'primaryEmailAddress': json['primary_email_address'] == null ? undefined : json['primary_email_address'],
        'stripeEmailAddress': json['stripe_email_address'] == null ? undefined : json['stripe_email_address'],
        'additionalEmailAddresses': json['additional_email_addresses'] == null ? undefined : json['additional_email_addresses'],
        'phoneNumber': json['phone_number'] == null ? undefined : json['phone_number'],
        'additionalPhoneNumbers': json['additional_phone_numbers'] == null ? undefined : json['additional_phone_numbers'],
        'slackHandle': json['slack_handle'] == null ? undefined : json['slack_handle'],
        'notes': json['notes'] == null ? undefined : json['notes'],
    };
}

export function MemberToJSON(value?: Omit<Member, 'id'|'all_email_addresses'|'all_phone_numbers'|'installs'> | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'name': value['name'],
        'primary_email_address': value['primaryEmailAddress'],
        'stripe_email_address': value['stripeEmailAddress'],
        'additional_email_addresses': value['additionalEmailAddresses'],
        'phone_number': value['phoneNumber'],
        'additional_phone_numbers': value['additionalPhoneNumbers'],
        'slack_handle': value['slackHandle'],
        'notes': value['notes'],
    };
}

